#!/bin/bash
NAME_SPACE="monit"

ELASTICSEARCH_IMAGE="elastic/elasticsearch:6.4.0"
ELASTICSEARCH_REST_PORT=9200
ELASTICSEARCH_NODE_PORT=9300
ELASTICSEARCH_REST_SVC_PORT="30920"
ELASTICSEARCH_NODE_SVC_PORT="30930"
ELASTIC_SEARCH_SVC_NAME="es"

KIBANA_IMAGE="elastic/kibana:6.4.0"
KIBANA_PORT="5601"
KIBANA_SVC_PORT="30561"

YML_NAME_SPACE=$(cat << EOF
apiVersion: v1
kind: Namespace
metadata:
  name: ${NAME_SPACE}
EOF
)

YML_ELASTICSEARCH_PV=$(cat << EOF
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs1-pv
spec:
  storageClassName: nfs
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.0.231
    path: /nfs/n1
EOF
)


YML_ELASTICSEARCH_PVC=$(cat << EOF
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-elasticsearch-0
  namespace: ${NAME_SPACE}
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 30Gi
EOF
)

YML_ELASTICSEARCH_STATEFULLSET=$(cat << EOF
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: ${NAME_SPACE}
  labels:
    app: elasticsearch
spec:
  serviceName: es
  # NOTE: This is number of nodes that we want to run
  # you may update this
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      terminationGracePeriodSeconds: 300
      initContainers:
      # NOTE:
      # This is to fix the permission on the volume
      # By default elasticsearch container is not run as
      # non root user.
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_notes_for_production_use_and_defaults
#      - name: fix-the-volume-permission
#        image: busybox
#        command: ['sh' , '-c' , 'chown -R 1000:1000 /usr/share/elasticsearch/data']
#        securityContext:
#          privileged: true
#        volumeMounts:
#        - name: data
#          mountPath: /usr/share/elasticsearch/data
      # NOTE:
      # To increase the default vm.max_map_count to 262144
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run-prod-mode
      - name: increase-the-vm-max-map-count
        image: busybox
        imagePullPolicy: Always
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      # To increase the ulimit
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_notes_for_production_use_and_defaults
      - name: increase-the-ulimit
        image: busybox
        imagePullPolicy: Always
        command:
        - sh
        - -c
        - ulimit -n 65536
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: ${ELASTICSEARCH_IMAGE}
        ports:
        - containerPort: ${ELASTICSEARCH_REST_PORT}
          name: http
        - containerPort: ${ELASTICSEARCH_NODE_PORT}
          name: tcp
        # NOTE: you can increase this resources
        resources:
          requests:
            memory: 2Gi
          limits:
            memory: 2Gi
        env:
          # NOTE: the cluster name; update this
          - name: cluster.name
            value: elastic_cluster
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          # NOTE: This will tell the elasticsearch node where to connect to other nodes to form a cluster
          - name: discovery.zen.ping.unicast.hosts
            value: "elasticsearch-0.${ELASTIC_SEARCH_SVC_NAME}"
          # NOTE: You can increase the heap size
          - name: ES_JAVA_OPTS
            value: -Xms512m -Xmx512m
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: nfs
      # NOTE: You can increase the storage size
      resources:
        requests:
          storage: 5Gi
EOF
)

YML_ELASTICSEARCH_SERVICE=$(cat << EOF
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
  name: ${ELASTIC_SEARCH_SVC_NAME}
  namespace: ${NAME_SPACE}
spec:
#  clusterIP: None
  ports:
    - name: service
      nodePort: ${ELASTICSEARCH_REST_SVC_PORT}
      port: ${ELASTICSEARCH_REST_PORT}
      protocol: TCP
      targetPort: ${ELASTICSEARCH_REST_PORT}
    - name: node-to-node
      nodePort: ${ELASTICSEARCH_NODE_SVC_PORT}
      port: ${ELASTICSEARCH_NODE_PORT}
      protocol: TCP
      targetPort: ${ELASTICSEARCH_NODE_PORT}
  selector:
    app: elasticsearch
  type: NodePort
EOF
)



YML_KIBANA_SERVICE=$(cat << EOF
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
  name: kibana-service
  namespace: ${NAME_SPACE}
spec:
  ports:
    - nodePort: ${KIBANA_SVC_PORT}
      port: ${KIBANA_PORT}
      protocol: TCP
      targetPort: ${KIBANA_PORT}
  selector:
    app: kibana
  type: NodePort
EOF
)


YML_KIBANA_DEPLOYMENT=$(cat << EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: ${NAME_SPACE}
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: ${KIBANA_IMAGE}
          env:
            - name: SERVER_NAME
              value: "kibana.${NAME_SPACE}"
            - name: ELASTICSEARCH_URL
              value: "http://${ELASTIC_SEARCH_SVC_NAME}"
          ports:
            - containerPort: ${KIBANA_PORT}
EOF
)

#!/bin/bash
RED='\e[31m'
GREEN='\e[32m'
YELLOW='\e[33m'
BLUE='\e[34m'
MAGENTA='\e[35m'
NC='\e[0m'

function echo_blue(){
	MSG=$1
	echo -e "${BLUE}${MSG}${NC}"
}

function echo_green(){
	MSG=$1
	echo -e "${GREEN}${MSG}${NC}"
}

function echo_red(){
	MSG=$1
	echo -e "${RED}${MSG}${NC}"
}

function echo_yellow(){
	MSG=$1
	echo -e "${YELLOW}${MSG}${NC}"
}

function echo_magenta(){
	MSG=$1
	echo -e "${MAGENTA}${MSG}${NC}"
}

function echo_err(){
	MSG=$1
	echo -e "${RED}${MSG}${NC}" >${ERR_OUT}
}

function rexe(){
	log_rexec $* 1>&2
	exe ssh ${SSH_OPTION} ${SSH_USER}@${TARGET_HOST} "${*}"
}


function rrun(){
	ssh ${SSH_OPTION} ${SSH_USER}@${TARGET_HOST} "${*}" 2>flog
}



function errmsg(){
	cat < ${ERR_OUT}
}

function continue(){

if ${STEP_INSTALL}
then
	read -p "continue?(y|n) : " flag
	flag=${flag,,}
	#IS_CONTINUE=true

	while [ ${flag} != "y" ] && [ ${flag} != "n" ]
	do
		read -p "continue?(y|n) : " flag

	done

	if [ ${flag} == "n" ]
		then
			error "stop install!!"
			exit 0
	fi
fi
	echo "======================================================"
}

function exe(){
	log_exec $* 1>&2
	$*
}

function remote_pkg_install(){
	local INSTALL_PKG_DIR=$1
	info "pakcage install : ${INSTALL_PKG_DIR}"
	echo $(rexe rm -rf ${REMOTE_PKG_TEMP} || true)
	rexe mkdir -p ${REMOTE_PKG_TEMP}
	exe scp ${SSH_OPTION} ${INSTALL_PKG_DIR}/* ${SSH_USER}@${TARGET_HOST}:${REMOTE_PKG_TEMP}
	rexe cd ${REMOTE_PKG_TEMP}";"sudo rpm -Uvh --replacefiles --replacepkgs *.rpm
}

function send_pkg(){
	local PKG_DIR=$1
	info "pakcage install : ${PKG_DIR}"
	echo $(rexe rm -rf ${REMOTE_PKG_TEMP} || true)
	rexe mkdir -p ${REMOTE_PKG_TEMP}
	exe scp ${SSH_OPTION} ${PKG_DIR}/* ${SSH_USER}@${TARGET_HOST}:${REMOTE_PKG_TEMP}
}


function send_file(){
	local FILE_PATH=$1
	info "pakcage install : ${FILE_PATH}"
	echo $(rexe rm -rf ${REMOTE_PKG_TEMP} || true)
	rexe mkdir -p ${REMOTE_PKG_TEMP}
	exe scp ${SSH_OPTION} ${FILE_PATH} ${SSH_USER}@${TARGET_HOST}:${REMOTE_PKG_TEMP}
}


function rcp(){


local LOCAL_PATH=$1
local TARGET_PATH=$2
local EXE_USER=$3

info "remote file copy : ${LOCAL_PATH} ${TARGET_PATH} ${EXE_USER}"
local PARENT=$(dirname $(realpath ${TARGET_PATH}))
local BASE_NAME=$(basename ${LOCAL_PATH})


echo $(rexe rm -rf ${REMOTE_PKG_TEMP} || true)
rexe mkdir -p ${REMOTE_PKG_TEMP}

if [ ${EXE_USER} -z ]
then
	EXE_USER=""
elif [ ${EXE_USER} == "sudo" ]
then
	EXE_USER="sudo "
else
	EXE_USER="sudo -u ${EXE_USER} "
fi

exe scp ${SSH_OPTION} ${LOCAL_PATH} ${SSH_USER}@${TARGET_HOST}:${REMOTE_PKG_TEMP}

rexe ${EXE_USER}mkdir -p ${PARENT}

rexe ${EXE_USER}cp -r ${REMOTE_PKG_TEMP}/${BASE_NAME} ${TARGET_PATH}
}

function mv_n_link() {
	local SOURCE=$1
	local TARGET=$2
	local PARENT=$(dirname $(realpath ${SOURCE}))
	local BASE_NAME=$(basename ${SOURCE})
	local TO="${TARGET}${PARENT}"
	exe mkdir -p "${TO}"
	exe rsync -av "${SOURCE}" "${TO}"
	exe rm -rf "${SOURCE}"
	exe ln -s "${TO}/${BASE_NAME}" "${SOURCE}"
}




function r_mv_n_link() {
	local SOURCE=$1
	local TARGET=$2
	local PARENT=$(dirname $(realpath ${SOURCE}))
	local BASE_NAME=$(basename ${SOURCE})
	local TO="${TARGET}${PARENT}"
	rexe sudo mkdir -p "${TO}"
	rexe sudo rsync -av "${SOURCE}" "${TO}"
	rexe sudo rm -rf "${SOURCE}"
	rexe sudo ln -s "${TO}/${BASE_NAME}" "${SOURCE}"
}


function r_to_link() {
	local SOURCE=$1
	local TARGET=$2
	rexe sudo mkdir -p "${TARGET}"
	rexe sudo rsync -av "${SOURCE}" "${TARGET}"
	rexe sudo rm -rf "${SOURCE}"
	rexe sudo ln -s "${TARGET}" "${SOURCE}"
}

function template() {
        local FILE_PATH=$1
        while read line; do
                eval echo "$line"
        done < ${FILE_PATH}
}

REGISTRY="10.10.22.99"
function ctag() {
    local IMAGE_NAME=$1
    docker tag "${IMAGE_NAME}" "${REGISTRY}/${IMAGE_NAME}"
    docker push "${REGISTRY}/${IMAGE_NAME}"
}